const xl = require('excel4node');
const path = require('path');

/* ----------------- Configuración para descargar archivos en excel registor de productores------------------ */
const wb = new xl.Workbook({
    dateFormat: 'm/d/yy hh:mm:ss'
  });
  
  const ws = wb.addWorksheet('Sheet 1');
  let style = wb.createStyle({
      font: {
        size: 12,
        bold: true,
        color: '000000'
      }
    })
  
  /* ----------------- Configuración para descargar archivos en excel caracterizacion de predios------------------ */
  const wf = new xl.Workbook({
    dateFormat: 'm/d/yy hh:mm:ss'
  });
  const cp = wf.addWorksheet('Sheet 2');
  let styles = wf.createStyle({
    font: {
      size: 12,
      bold: true,
      color: '000000'
    }
  })

function createExcel(filePath) {
    const wb = new xl.Workbook();
    const ws = wb.addWorksheet('Sheet 1');

    const style = wb.createStyle({
        font: {
            color: '#FF0800',
            size: 12,
        },
        numberFormat: '$#,##0.00; ($#,##0.00); -',
    });

    setTimeout (async() => { 
        if (req.timedout) { 
          next (); 
        } 
        else { 
          
            console.log('req.params.id', req.params.id)
            const charaterizationFarmList = await pool.query('select * from farm WHERE projectId = ?', [req.params.id]) 
            
            console.log('CARACTERIZATION', charaterizationFarmList )
            cp.cell(1,1)
            .string('Proyecto')
            .style(styles)
            cp.cell(1,2)
            .string('Cedula')
            .style(styles)
            cp.cell(1,3)
            .string('Primer Nombre')
            .style(styles)
            cp.cell(1,4)
            .string('Segundo Nombre')
            .style(styles)
            cp.cell(1,5)
            .string('Primer Apellido')
            .style(styles)
            cp.cell(1,6)
            .string('Segundo Apellido')
            .style(styles)
            cp.cell(1,7)
            .string('Fecha de nacimiento')
            .style(styles)
            cp.cell(1,8)
            .string('Etnia')
            .style(styles)
            cp.cell(1,9)
            .string('Celular1')
            .style(styles)
            cp.cell(1,10)
            .string('Celular2')
            .style(styles)
            cp.cell(1,11)
            .string('Email')
            .style(styles)
            cp.cell(1,12)
            .string('Género')
            .style(styles)
            cp.cell(1,13)
            .string('Nivel Escolar')
            .style(styles)
            cp.cell(1,14)
            .string('Organizaciones')
            .style(styles)
            cp.cell(1,15)
            .string('Estado Civil')
            .style(styles)
            cp.cell(1,16)
            .string('Nombre completo conyuge')
            .style(styles)
            cp.cell(1,17)
            .string('Cedula Conyuge')
            .style(styles)
            cp.cell(1,18)
            .string('Lugar de expedición cedula conyuge')
            .style(styles)
            cp.cell(1,19)
            .string('Fecha de nacimiento conyuge')
            .style(styles)
            cp.cell(1,20)
            .string('Celular conyuge')
            .style(styles)
            cp.cell(1,21)
            .string('Email conyuge')
            .style(styles)
            cp.cell(1,22)
            .string('Nombre de la finca')
            .style(styles)
            cp.cell(1,23)
            .string('Municipio')
            .style(styles)
            cp.cell(1,24)
            .string('Corregimiento')
            .style(styles)
            cp.cell(1,25)
            .string('Vereda')
            .style(styles)
            cp.cell(1,26)
            .string('Titulo de posesión')
            .style(styles)
            cp.cell(1,27)
            .string('Extensión total del terreno')
            .style(styles)
            cp.cell(1,28)
            .string('Area Cultivada')
            .style(styles)
            cp.cell(1,29)
            .string('Area de Libre Destinación')
            .style(styles)
            cp.cell(1,30)
            .string('Area de conservación')
            .style(styles)
            cp.cell(1,31)
            .string('Presencia de proyectos actuales')
            .style(styles)
            cp.cell(1,32)
            .string('Manejo de agroquimicos')
            .style(styles)
            cp.cell(1,33)
            .string('Implementación de buenas prácticas')
            .style(styles)
            cp.cell(1,34)
            .string('Area de otros usos')
            .style(styles)
            cp.cell(1,35)
            .string('Metros Líneales de Afluentes')
            .style(styles)
            ws.cell(1,36)
            .string('Uso de Suelo y su Vocación')
            .style(styles)
            cp.cell(1,37)
            .string('Linea Productiva mas Implementada')
            .style(styles)
            cp.cell(1,38)
            .string('Tipo de certificación')
            .style(styles)
            cp.cell(1,39)
            .string('Lindero al Norte')
            .style(styles)
            cp.cell(1,40)
            .string('Lindero al Sur')
            .style(styles)
            cp.cell(1,41)
            .string('Lindero al Oriente')
            .style(styles)
            cp.cell(1,42)
            .string('Lindero al Occidente')
            .style(styles)
            cp.cell(1,43)
            .string('Altura')
            .style(styles)
            cp.cell(1,44)
            .string('Latitud')
            .style(styles)
            cp.cell(1,45)
            .string('Longitud')
            .style(styles)
            cp.cell(1,46)
            .string('Años en la propiedad')
            .style(styles)
            cp.cell(1,47)
            .string('Linea Productiva 1')
            .style(styles)
            cp.cell(1,48)
            .string('Linea Productiva 2')
            .style(styles)
            cp.cell(1,49)
            .string('Linea Productiva 3')
            .style(styles)
            cp.cell(1,50)
            .string('Linea Productiva 4')
            .style(styles)
            cp.cell(1,51)
            .string('Linea Productiva 5')
            .style(styles)
            cp.cell(1,52)
            .string('Conocimiento de la linea productiva 1')
            .style(styles)
            cp.cell(1,53)
            .string('Conocimiento de la linea productiva 2')
            .style(styles)
            cp.cell(1,54)
            .string('Conocimiento de la linea productiva 3')
            .style(styles)
            cp.cell(1,55)
            .string('Conocimiento de la linea productiva 4')
            .style(styles)
            cp.cell(1,56)
            .string('Conocimiento de la linea productiva 5')
            .style(styles)
            cp.cell(1,57)
            .string('Tipo de comercialización')
            .style(styles)
            cp.cell(1,58)
            .string('Productos de biopreparados')
            .style(styles)
            cp.cell(1,59)
            .string('Disponibilidad de agua')
            .style(styles)
            cp.cell(1,60)
            .string('Disponibilidad de vías de acceso')
            .style(styles)
            cp.cell(1,61)
            .string('Disponibilidad de electricidad')
            .style(styles)
            ws.cell(1,62)
            .string('Disponibilidad de redes de comunicación')
            .style(styles)
            cp.cell(1,63)
            .string('Disponibilidad para participar en proyectos de asistencia técnica')
            .style(styles)
            cp.cell(1,64)
            .string('Variedad de herramientas básicas de uso en el cultivo')
            .style(styles)
            cp.cell(1,65)
            .string('Tenencia de botiquin de primeros auxilios')
            .style(styles)
            cp.cell(1,66)
            .string('Tenencia de equipos de fumigación')
            .style(styles)
            cp.cell(1,67)
            .string('Tenencia de sistemas de riego')
            .style(styles)
            cp.cell(1,68)
            .string('Tenencia de maquinaria libiana ')
            .style(styles)
            cp.cell(1,69)
            .string('Interes en participar en proyectos de asistencia técnica')
            .style(styles)
            cp.cell(1,70)
            .string('Origen del capital de trabajo')
            .style(styles)
            cp.cell(1,71)
            .string('Grado de implementación de tecnologías de producción')
            .style(styles)
            cp.cell(1,72)
            .string('Linea Productiva 1')
            .style(styles)
            cp.cell(1,73)
            .string('Variedad')
            .style(styles)
            cp.cell(1,74)
            .string('Cantidad de plantulas')
            .style(styles)
            cp.cell(1,75)
            .string('Distancia entre surcos')
            .style(styles)
            cp.cell(1,76)
            .string('Distancia entre plantas')
            .style(styles)
            cp.cell(1,77)
            .string('Edad de cultivo (Años)')
            .style(styles)
            cp.cell(1,78)
            .string('Etapa del cultivo')
            .style(styles)
            cp.cell(1,79)
            .string('Cantidad de Kilogramos Producidos por Año')
            .style(styles)
            cp.cell(1,80)
            .string('Estado General del cultivo')
            .style(styles)
            cp.cell(1,81)
            .string('Area Aproximada (m2)')
            .style(styles)
            cp.cell(1,82)
            .string('Latitud Lote1')
            .style(styles)
            cp.cell(1,83)
            .string('Longitud Lote1')
            .style(styles)
            cp.cell(1,84)
            .string('Tipo de manejo')
            .style(styles)
            cp.cell(1,85)
            .string('Valor promedo de KG comercializado en pesos en el año')
            .style(styles)
            cp.cell(1,86)
            .string('Linea Productiva 2')
            .style(styles)
            cp.cell(1,87)
            .string('Variedad')
            .style(styles)
            cp.cell(1,88)
            .string('Cantidad de plantulas')
            .style(styles)
            cp.cell(1,89)
            .string('Distancia entre surcos')
            .style(styles)
            cp.cell(1,90)
            .string('Distancia entre plantas')
            .style(styles)
            cp.cell(1,91)
            .string('Edad de cultivo (Años)')
            .style(styles)
            cp.cell(1,92)
            .string('Etapa del cultivo')
            .style(styles)
            cp.cell(1,93)
            .string('Cantidad de Kilogramos Producidos por Año')
            .style(styles)
            cp.cell(1,94)
            .string('Estado General del cultivo')
            .style(styles)
            cp.cell(1,95)
            .string('Area Aproximada (m2)')
            .style(styles)
            cp.cell(1,96)
            .string('Latitud Lote2')
            .style(styles)
            cp.cell(1,97)
            .string('Longitud Lote2')
            .style(styles)
            cp.cell(1,98)
            .string('Tipo de manejo')
            .style(styles)
            cp.cell(1,99)
            .string('Valor promedo de KG comercializado en pesos en el año')
            .style(styles)
            cp.cell(1,100)
            .string('Linea Productiva 3')
            .style(styles)
            cp.cell(1,101)
            .string('Variedad')
            .style(styles)
            cp.cell(1,102)
            .string('Cantidad de plantulas')
            .style(styles)
            cp.cell(1,103)
            .string('Distancia entre surcos')
            .style(styles)
            cp.cell(1,104)
            .string('Distancia entre plantas')
            .style(styles)
            cp.cell(1,105)
            .string('Edad de cultivo (Años)')
            .style(styles)
            cp.cell(1,106)
            .string('Etapa del cultivo')
            .style(styles)
            cp.cell(1,107)
            .string('Cantidad de Kilogramos Producidos por Año')
            .style(styles)
            cp.cell(1,108)
            .string('Estado General del cultivo')
            .style(styles)
            cp.cell(1,109)
            .string('Area Aproximada (m2)')
            .style(styles)
            cp.cell(1,110)
            .string('Latitud Lote3')
            .style(styles)
            cp.cell(1,111)
            .string('Longitud Lote3')
            .style(styles)
            cp.cell(1,112)
            .string('Tipo de manejo')
            .style(styles)
            cp.cell(1,113)
            .string('Valor promedo de KG comercializado en pesos en el año')
            .style(styles)
            cp.cell(1,114)
            .string('Linea Productiva 4 (Pecuario)')
            .style(styles)
            cp.cell(1,115)
            .string('Raza')
            .style(styles)
            cp.cell(1,116)
            .string('Cantidad de animales')
            .style(styles)
            cp.cell(1,117)
            .string('numero de corrales')
            .style(styles)
            cp.cell(1,118)
            .string('Edad promedio de los animales')
            .style(styles)
            cp.cell(1,119)
            .string('Etapa productiva')
            .style(styles)
            cp.cell(1,120)
            .string('Cantidad de Kilogramos Producidos por Año')
            .style(styles)
            cp.cell(1,121)
            .string('Estado General del cultivo')
            .style(styles)
            cp.cell(1,122)
            .string('Area Aproximada (m2)')
            .style(styles)
            cp.cell(1,123)
            .string('Latitud Lote4')
            .style(styles)
            cp.cell(1,124)
            .string('Longitud Lote4')
            .style(styles)
            cp.cell(1,125)
            .string('Tipo de nutrición')
            .style(styles)
            cp.cell(1,126)
            .string('Valor promedo de KG comercializado en pesos en el año')
            .style(styles)
            cp.cell(1,127)
            .string('Linea Productiva 5 (Pecuario)')
            .style(styles)
            cp.cell(1,128)
            .string('Raza')
            .style(styles)
            cp.cell(1,129)
            .string('Cantidad de animales')
            .style(styles)
            cp.cell(1,130)
            .string('numero de corrales')
            .style(styles)
            cp.cell(1,131)
            .string('Edad promedio de los animales')
            .style(styles)
            cp.cell(1,132)
            .string('Etapa productiva')
            .style(styles)
            cp.cell(1,133)
            .string('Cantidad de Kilogramos Producidos por Año')
            .style(styles)
            cp.cell(1,134)
            .string('Estado General del cultivo')
            .style(styles)
            cp.cell(1,135)
            .string('Area Aproximada (m2)')
            .style(styles)
            cp.cell(1,136)
            .string('Latitud Lote5')
            .style(styles)
            cp.cell(1,137)
            .string('Longitud Lote5')
            .style(styles)
            cp.cell(1,138)
            .string('Tipo de nutrición')
            .style(styles)
            cp.cell(1,139)
            .string('Valor promedo de KG comercializado en pesos en el año')
            .style(styles)
            cp.cell(1,140)
            .string('Fecha de caracterización de predio')
            .style(styles)
            cp.cell(1,141)
            .string('Encuestador')
            .style(styles)
            cp.cell(1,142)
            .string('Comentarios')
            .style(styles)
            
  
            for(let i=0; i<charaterizationFarmList.length; i++){
                //console.log('aaa', charaterizationFarmList[i].latitudeLongitude);
                let arrayCoordenates = charaterizationFarmList[i].latitudeLongitude.split(',');
                let arrayCoordenates1 = charaterizationFarmList[i].coordenates1.split(',');
                let arrayCoordenates2 = charaterizationFarmList[i].coordenates2.split(',');
                let arrayCoordenates3 = charaterizationFarmList[i].coordenates3.split(',');
                let arrayCoordenates4 = charaterizationFarmList[i].coordenates4.split(',');
                let arrayCoordenates5 = charaterizationFarmList[i].coordenates5.split(',');
                const userPollster = await pool.query('select * from users WHERE id = ?', [charaterizationFarmList[i].userId])
                const project = await pool.query('select * from projects WHERE id_project = ?', [req.params.id])
                //console.log('project', project)
                
                cp.cell(2+i, 1)
                .string(project[0].nom_proyecto)
                cp.cell(2+i, 2)
                .string(charaterizationFarmList[i].nitProducer)
                cp.cell(2+i, 3)
                .string(charaterizationFarmList[i].firstName)
                cp.cell(2+i, 4)
                .string(charaterizationFarmList[i].secondName)
                cp.cell(2+i, 5)
                .string(charaterizationFarmList[i].firstSurname)
                cp.cell(2+i, 6)
                .string(charaterizationFarmList[i].secondSurname)
                cp.cell(2+i, 7)
                .string(charaterizationFarmList[i].birthdate)
                cp.cell(2+i, 8)
                .string(charaterizationFarmList[i].ethnicity)
                cp.cell(2+i, 9)
                .string(charaterizationFarmList[i].celphone1)
                cp.cell(2+i, 10)
                .string(charaterizationFarmList[i].celphone2)
                cp.cell(2+i, 11)
                .string(charaterizationFarmList[i].email)
                cp.cell(2+i, 12)
                .string(charaterizationFarmList[i].gender)
                cp.cell(2+i, 13)
                .string(charaterizationFarmList[i].scholarLevel)
                cp.cell(2+i, 14)
                .string(charaterizationFarmList[i].organization)
                cp.cell(2+i, 15)
                .string(charaterizationFarmList[i].maritalStatus)
                cp.cell(2+i, 16)
                .string(charaterizationFarmList[i].fullnameSpouse)
                cp.cell(2+i, 17)
                .string(charaterizationFarmList[i].nitSpouse)
                cp.cell(2+i, 18)
                .string(charaterizationFarmList[i].expeditionSpouse)
                cp.cell(2+i, 19)
                .string(charaterizationFarmList[i].dateSpouse)
                cp.cell(2+i, 20)
                .string(charaterizationFarmList[i].celphoneSpouse)
                cp.cell(2+i, 21)
                .string(charaterizationFarmList[i].emailSpouse)
                cp.cell(2+i, 22)
                .string(charaterizationFarmList[i].nameFarm)
                cp.cell(2+i, 23)
                .string(charaterizationFarmList[i].municipality)
                cp.cell(2+i, 24)
                .string(charaterizationFarmList[i].corregimiento)
                cp.cell(2+i, 25)
                .string(charaterizationFarmList[i].vereda)
                cp.cell(2+i, 26)
                .string(charaterizationFarmList[i].possession)
                cp.cell(2+i, 27)
                .string(charaterizationFarmList[i].totalExtension)
                cp.cell(2+i, 28)
                .string(charaterizationFarmList[i].cropsArea)
                cp.cell(2+i, 29)
                .string(charaterizationFarmList[i].freeArea)
                cp.cell(2+i, 30)
                .string(charaterizationFarmList[i].conservationArea)
                cp.cell(2+i, 31)
                .string(charaterizationFarmList[i].currentProjects)
                cp.cell(2+i, 32)
                .string(charaterizationFarmList[i].agrochemical)
                cp.cell(2+i, 33)
                .string(charaterizationFarmList[i].bestPractices)
                cp.cell(2+i, 34)
                .string(charaterizationFarmList[i].otherAreas)
                cp.cell(2+i, 35)
                .string(charaterizationFarmList[i].afluentes)
                cp.cell(2+i, 36)
                .string(charaterizationFarmList[i].vocationAndLandUse)
                cp.cell(2+i, 37)
                .string(charaterizationFarmList[i].productiveLine)
                cp.cell(2+i, 38)
                .string(charaterizationFarmList[i].certificationType)
                cp.cell(2+i, 39)
                .string(charaterizationFarmList[i].purlieuNorth)
                cp.cell(2+i, 40)
                .string(charaterizationFarmList[i].purlieuSouth)
                cp.cell(2+i, 41)
                .string(charaterizationFarmList[i].purlieuEast)
                cp.cell(2+i, 42)
                .string(charaterizationFarmList[i].purlieuWest)
                cp.cell(2+i, 43)
                .string(charaterizationFarmList[i].altura)
                cp.cell(2+i, 44)
                .string(arrayCoordenates[0])
                cp.cell(2+i, 45)
                .string(arrayCoordenates[1])
                cp.cell(2+i, 46)
                .string(charaterizationFarmList[i].anosPropiedad)
                cp.cell(2+i, 47)
                .string(charaterizationFarmList[i].productiveLine1)
                cp.cell(2+i, 48)
                .string(charaterizationFarmList[i].productiveLine2)
                cp.cell(2+i, 49)
                .string(charaterizationFarmList[i].productiveLine3)
                cp.cell(2+i, 50)
                .string(charaterizationFarmList[i].productiveLine4)
                cp.cell(2+i, 51)
                .string(charaterizationFarmList[i].productiveLine5)
                cp.cell(2+i, 52)
                .string(charaterizationFarmList[i].knowProductiveLine1)
                cp.cell(2+i, 53)
                .string(charaterizationFarmList[i].knowProductiveLine2)
                cp.cell(2+i, 54)
                .string(charaterizationFarmList[i].knowPeoductiveLine3)
                cp.cell(2+i, 55)
                .string(charaterizationFarmList[i].knowProductiveLine4)
                cp.cell(2+i, 56)
                .string(charaterizationFarmList[i].knowProductiveLine5)
                cp.cell(2+i, 57)
                .string(charaterizationFarmList[i].comercializationType)
                cp.cell(2+i, 58)
                .string(charaterizationFarmList[i].biopreparadosProduction)
                cp.cell(2+i, 59)
                .string(charaterizationFarmList[i].waterAvailable)
                cp.cell(2+i, 60)
                .string(charaterizationFarmList[i].accessRoads)
                cp.cell(2+i, 61)
                .string(charaterizationFarmList[i].electricityAvailability)
                cp.cell(2+i, 62)
                .string(charaterizationFarmList[i].ComunicationAvailable)
                cp.cell(2+i, 63)
                .string(charaterizationFarmList[i].projectParticipation)
                cp.cell(2+i, 64)
                .string(charaterizationFarmList[i].cropTools)
                cp.cell(2+i, 65)
                .string(charaterizationFarmList[i].firstAidKit)
                cp.cell(2+i, 66)
                .string(charaterizationFarmList[i].fumigateKit)
                cp.cell(2+i, 67)
                .string(charaterizationFarmList[i].irrigationSystem)
                cp.cell(2+i, 68)
                .string(charaterizationFarmList[i].machines)
                cp.cell(2+i, 69)
                .string(charaterizationFarmList[i].ParticipateInProyects)
                cp.cell(2+i, 70)
                .string(charaterizationFarmList[i].workingCapital)
                cp.cell(2+i, 71)
                .string(charaterizationFarmList[i].implementationTecnologyLevel)
                cp.cell(2+i, 72)
                .string(charaterizationFarmList[i].productLine1)
                cp.cell(2+i, 73)
                .string(charaterizationFarmList[i].variety1)
                cp.cell(2+i, 74)
                .string(charaterizationFarmList[i].cantPlants1)
                cp.cell(2+i, 75)
                .string(charaterizationFarmList[i].groovesDistance1)
                cp.cell(2+i, 76)
                .string(charaterizationFarmList[i].plantsDistance1)
                cp.cell(2+i, 77)
                .string(charaterizationFarmList[i].ageCrop1)
                cp.cell(2+i, 78)
                .string(charaterizationFarmList[i].stageCrop1)
                cp.cell(2+i, 79)
                .string(charaterizationFarmList[i].cantKgProducedByYear1)
                cp.cell(2+i, 80)
                .string(charaterizationFarmList[i].cropStatus1)
                cp.cell(2+i, 81)
                .string(charaterizationFarmList[i].aproxArea1)
                cp.cell(2+i, 82)
                .string(arrayCoordenates1[0])
                cp.cell(2+i, 83)
                .string(arrayCoordenates1[1])
                cp.cell(2+i, 84)
                .string(charaterizationFarmList[i].useType)
                cp.cell(2+i, 85)
                .string(charaterizationFarmList[i].promKgComercializateValue)
                cp.cell(2+i, 86)
                .string(charaterizationFarmList[i].productLine2)
                cp.cell(2+i, 87)
                .string(charaterizationFarmList[i].variety2)
                cp.cell(2+i, 88)
                .string(charaterizationFarmList[i].cantPlants2)
                cp.cell(2+i, 89)
                .string(charaterizationFarmList[i].groovesDistance2)
                cp.cell(2+i, 90)
                .string(charaterizationFarmList[i].plantsDistance2)
                cp.cell(2+i, 91)
                .string(charaterizationFarmList[i].ageCrop2)
                cp.cell(2+i, 92)
                .string(charaterizationFarmList[i].stageCrop2)
                cp.cell(2+i, 93)
                .string(charaterizationFarmList[i].cantKgProducedByYear2)
                cp.cell(2+i, 94)
                .string(charaterizationFarmList[i].cropStatus2)
                cp.cell(2+i, 95)
                .string(charaterizationFarmList[i].aproxArea2)
                cp.cell(2+i, 96)
                .string(arrayCoordenates2[0])
                cp.cell(2+i, 97)
                .string(arrayCoordenates2[1])
                cp.cell(2+i, 98)
                .string(charaterizationFarmList[i].useType2)
                cp.cell(2+i, 99)
                .string(charaterizationFarmList[i].promKgComercializateValu2)
                cp.cell(2+i, 100)
                .string(charaterizationFarmList[i].productLine3)
                cp.cell(2+i, 101)
                .string(charaterizationFarmList[i].variety3)
                cp.cell(2+i, 102)
                .string(charaterizationFarmList[i].cantPlants3)
                cp.cell(2+i, 103)
                .string(charaterizationFarmList[i].groovesDistance3)
                cp.cell(2+i, 104)
                .string(charaterizationFarmList[i].plantsDistance3)
                cp.cell(2+i, 105)
                .string(charaterizationFarmList[i].ageCrop3)
                cp.cell(2+i, 106)
                .string(charaterizationFarmList[i].stageCrop3)
                cp.cell(2+i, 107)
                .string(charaterizationFarmList[i].cantKgProducedByYear3)
                cp.cell(2+i, 108)
                .string(charaterizationFarmList[i].cropStatus3)
                cp.cell(2+i, 109)
                .string(charaterizationFarmList[i].aproxArea3)
                cp.cell(2+i, 110)
                .string(arrayCoordenates3[0])
                cp.cell(2+i, 111)
                .string(arrayCoordenates3[1])
                cp.cell(2+i, 112)
                .string(charaterizationFarmList[i].useType3)
                cp.cell(2+i, 113)
                .string(charaterizationFarmList[i].promKgComercializateValu3)
                cp.cell(2+i, 114)
                .string(charaterizationFarmList[i].productLine4Pecuaria)
                cp.cell(2+i, 115)
                .string(charaterizationFarmList[i].breed)
                cp.cell(2+i, 116)
                .string(charaterizationFarmList[i].cantAnimals)
                cp.cell(2+i, 117)
                .string(charaterizationFarmList[i].numberPlaces)
                cp.cell(2+i, 118)
                .string(charaterizationFarmList[i].ageAverageAnimals)
                cp.cell(2+i, 119)
                .string(charaterizationFarmList[i].ageCrop4)
                cp.cell(2+i, 120)
                .string(charaterizationFarmList[i].cantKgProducedByYear4)
                cp.cell(2+i, 121)
                .string(charaterizationFarmList[i].cropStatus4)
                cp.cell(2+i, 122)
                .string(charaterizationFarmList[i].aproxArea4)
                ws.cell(2+i, 123)
                .string(arrayCoordenates4[0])
                cp.cell(2+i, 124)
                .string(arrayCoordenates4[1])
                cp.cell(2+i, 125)
                .string(charaterizationFarmList[i].nutritionType)
                cp.cell(2+i, 126)
                .string(charaterizationFarmList[i].promKgComercializateValu4)
                cp.cell(2+i, 127)
                .string(charaterizationFarmList[i].productLine5Pecuaria)
                cp.cell(2+i, 128)
                .string(charaterizationFarmList[i].breed5)
                cp.cell(2+i, 129)
                .string(charaterizationFarmList[i].cantAnimals5)
                cp.cell(2+i, 130)
                .string(charaterizationFarmList[i].numberPlaces5)
                cp.cell(2+i, 131)
                .string(charaterizationFarmList[i].ageAverageAnimals5)
                cp.cell(2+i, 132)
                .string(charaterizationFarmList[i].ageCrop5)
                cp.cell(2+i, 133)
                .string(charaterizationFarmList[i].cantKgProducedByYear5)
                cp.cell(2+i, 134)
                .string(charaterizationFarmList[i].cropStatus5)
                cp.cell(2+i, 135)
                .string(charaterizationFarmList[i].aproxArea5)
                cp.cell(2+i, 136)
                .string(arrayCoordenates5[0])
                cp.cell(2+i, 137)
                .string(arrayCoordenates5[1])
                cp.cell(2+i, 138)
                .string(charaterizationFarmList[i].nutritionType5)
                cp.cell(2+i, 139)
                .string(charaterizationFarmList[i].promKgComercializateValu5)
                cp.cell(2+i, 140)
                .string(charaterizationFarmList[i].time_creation.toString())
                cp.cell(2+i, 141)
                .string(userPollster[0].nom_user)
                cp.cell(2+i, 142)
                .string(charaterizationFarmList[i].comments)
  
            }
  
            wf.write('Malla predios caracterizados.xlsx', res)
  
        } 
    }, Math.random() * 7000); 
}

module.exports = createExcel;