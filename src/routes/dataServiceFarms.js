const express = require("express");
const router = express.Router();
const fn = require("../controllers/functions");
const pool = require("../database");
const fs = require("fs");
const cloudinary = require("cloudinary");
const http = require("http");

const image2base64 = require("image-to-base64");

cloudinary.config({
  cloud_name: "tecnologia-aplicada-octa",
  api_key: "392792575655893",
  api_secret: "8iQ0ASIr6lRkyYstUjd2mnrlYL4",
});

//Creando una finca

router.post("/newFarm", async (req, res, next) => {
  // console.log('******REQ.BODY******', req.body);
  const existFarm = await pool.query(
    "SELECT * from farm WHERE nitProducer = ?",
    [req.body.nitProducer]
  );

  if(existFarm.length != 0){
    return res.json({
      mensaje: "Los datos se han almacenado con exito",
      id_farm: existFarm[0].id_farm,
      img_beneficiario: existFarm[0].imgBeneficiario,
      firstName: existFarm[0].firstName,
      secondName: existFarm[0].secondName,
      firstSurname: existFarm[0].firstSurname,
      secondSurname: existFarm[0].secondSurname,
      nitProducer: existFarm[0].nitProducer,
      expedition: existFarm[0].expedition,
      birthdate: existFarm[0].birthdate,
      ethnicity: existFarm[0].ethnicity,
      celphone1: existFarm[0].celphone1,
      celphone2: existFarm[0].celphone2,
      email: existFarm[0].email,
      gender: existFarm[0].gender,
      scholarLevel: existFarm[0].scholarLevel,
      organization: existFarm[0].organization,
      maritalStatus: existFarm[0].maritalStatus,
      fullnameSpouse: existFarm[0].fullnameSpouse,
      nitSpouse: existFarm[0].nitProducer,
      expeditionSpouse: existFarm[0].expeditionSpouse,
      dateSpouse: existFarm[0].dateSpouse,
      celphoneSpouse: existFarm[0].celphoneSpouse,
      emailSpouse: existFarm[0].emailSpouse,
      nameFarm: existFarm[0].nameFarm,
      municipality: existFarm[0].municipality,
      corregimiento: existFarm[0].corregimiento,
      vereda: existFarm[0].vereda,
      possession: existFarm[0].possession,
      totalExtension: existFarm[0].totalExtension,
      cropsArea: existFarm[0].cropsArea,
      freeArea: existFarm[0].freeArea,
      conservationArea: existFarm[0].conservationArea,
      currentProjects: existFarm[0].currentProjects,
      agrochemical: existFarm[0].agrochemical,
      bestPractices: existFarm[0].bestPractices,
      otherAreas: existFarm[0].otherAreas,
      afluentes: existFarm[0].afluentes,
      vocationAndLandUse: existFarm[0].vocationAndLandUse,
      productiveLine: existFarm[0].productiveLine,
      certificationType: existFarm[0].certificationType,
      purlieuNorth: existFarm[0].purlieuNorth,
      purlieuSouth: existFarm[0].purlieuSouth,
      purlieuEast: existFarm[0].purlieuEast,
      purlieuWest: existFarm[0].purlieuWest,
      altura: existFarm[0].altura,
      latitudeLongitude: existFarm[0].latitudeLongitude,
      anosPropiedad: existFarm[0].anosPropiedad,
      productiveLine1: existFarm[0].productiveLine1,
      productiveLine2: existFarm[0].productiveLine2,
      productiveLine3: existFarm[0].productiveLine3,
      knowProductiveLine1: existFarm[0].knowProductiveLine1,
      knowProductiveLine2: existFarm[0].knowProductiveLine2,
      knowPeoductiveLine3: existFarm[0].knowPeoductiveLine3,
      comercializationType: existFarm[0].comercializationType,
      biopreparadosProduction: existFarm[0].biopreparadosProduction,
      waterAvailable: existFarm[0].waterAvailable,
      accessRoads: existFarm[0].accessRoads,
      electricityAvailability: existFarm[0].electricityAvailability,
      ComunicationAvailable: existFarm[0].ComunicationAvailable,
      projectParticipation: existFarm[0].projectParticipation,
      cropTools: existFarm[0].cropTools,
      firstAidKit: existFarm[0].firstAidKit,
      fumigateKit: existFarm[0].fumigateKit,
      irrigationSystem: existFarm[0].irrigationSystem,
      machines: existFarm[0].machines,
      ParticipateInProyects: existFarm[0].ParticipateInProyects,
      workingCapital: existFarm[0].workingCapital,
      implementationTecnologyLevel: existFarm[0].implementationTecnologyLevel,
      productLine1: existFarm[0].productLine1,
      variety1: existFarm[0].variety1,
      cantPlants1: existFarm[0].cantPlants1,
      plantsDistance1: existFarm[0].plantsDistance1,
      groovesDistance1: existFarm[0].groovesDistance1,
      ageCrop1: existFarm[0].ageCrop1,
      stageCrop1: existFarm[0].stageCrop1,
      cantKgProducedByYear1: existFarm[0].cantKgProducedByYear1,
      cropStatus1: existFarm[0].cropStatus1,
      aproxArea1: existFarm[0].aproxArea1,
      coordenates1: existFarm[0].coordenates1,
      useType: existFarm[0].useType,
      promKgComercializateValue: existFarm[0].promKgComercializateValue,
      productLine2: existFarm[0].productLine2,
      variety2: existFarm[0].variety2,
      cantPlants2: existFarm[0].cantPlants2,
      plantsDistance2: existFarm[0].plantsDistance2,
      groovesDistance2: existFarm[0].groovesDistance2,
      ageCrop2: existFarm[0].ageCrop2,
      stageCrop2: existFarm[0].stageCrop2,
      cantKgProducedByYear2: existFarm[0].cantKgProducedByYear2,
      cropStatus2: existFarm[0].cropStatus2,
      aproxArea2: existFarm[0].aproxArea2,
      coordenates2: existFarm[0].coordenates2,
      useType2: existFarm[0].useType2,
      promKgComercializateValu2: existFarm[0].promKgComercializateValu2,
      productLine3: existFarm[0].productLine3,
      variety3: existFarm[0].variety3,
      cantPlants3: existFarm[0].cantPlants3,
      plantsDistance3: existFarm[0].plantsDistance3,
      groovesDistance3: existFarm[0].groovesDistance3,
      ageCrop3: existFarm[0].ageCrop3,
      stageCrop3: existFarm[0].stageCrop3,
      cantKgProducedByYear3: existFarm[0].cantKgProducedByYear3,
      cropStatus3: existFarm[0].cropStatus3,
      aproxArea3: existFarm[0].aproxArea3,
      coordenates3: existFarm[0].coordenates3,
      useType3: existFarm[0].useType3,
      promKgComercializateValu3: existFarm[0].promKgComercializateValu3,
      projectId: existFarm[0].projectId,
      productLine4Pecuaria: existFarm[0].productLine4Pecuaria,
      breed: existFarm[0].breed,
      cantAnimals: existFarm[0].cantAnimals,
      numberPlaces: existFarm[0].numberPlaces,
      ageAverageAnimals: existFarm[0].ageAverageAnimals,
      ageCrop4: existFarm[0].ageCrop4,
      cantKgProducedByYear4: existFarm[0].cantKgProducedByYear4,
      cropStatus4: existFarm[0].cropStatus4,
      aproxArea4: existFarm[0].aproxArea4,
      coordenates4: existFarm[0].coordenates4,
      nutritionType: existFarm[0].nutritionType,
      promKgComercializateValu4: existFarm[0].promKgComercializateValu4,
      productLine5Pecuaria: existFarm[0].productLine5Pecuaria,
      breed5: existFarm[0].breed5,
      cantAnimals5: existFarm[0].cantAnimals5,
      numberPlaces5: existFarm[0].numberPlaces5,
      ageAverageAnimals5: existFarm[0].ageAverageAnimals5,
      ageCrop5: existFarm[0].ageCrop5,
      cantKgProducedByYear5: existFarm[0].cantKgProducedByYear5,
      cropStatus5: existFarm[0].cropStatus5,
      aproxArea5: existFarm[0].aproxArea5,
      coordenates5: existFarm[0].coordenates5,
      nutritionType5: existFarm[0].nutritionType5,
      promKgComercializateValu5: existFarm[0].promKgComercializateValu5,
      imgSignature: existFarm[0].imgSig,
      creationDate: existFarm[0].creationDate,
      userId: existFarm[0].userId,
      comments: existFarm[0].comments,
      knowProductiveLine4: existFarm[0].knowProductiveLine4,
      knowProductiveLine5: existFarm[0].knowProductiveLine5,
      cant_kg_by_year_lote4: existFarm[0].cant_kg_by_year_lote4,
      cant_kg_by_year_lote5: existFarm[0].cant_kg_by_year_lote5,
      price_kg_sold_lote4: existFarm[0].price_kg_sold_lote4,
      price_kg_sold_lote5: existFarm[0].price_kg_sold_lote5,
      typeofanimal:existFarm[0].typeofanimal,
      typeofanimal5:existFarm[0].typeofanimal5
    });
  }


  let result = {};
  let imgSignat = {};
  const imgBeneficiario = req.body.img_beneficiario;
  const imgSig = req.body.imgSignature;

  //console.log("request:",req.body)

  if (req.body.img_beneficiario != "") {
    const imagen = req.body.img_beneficiario;
    let uploadStr = 'data:image/jpeg;base64,' + imagen;

    result = await cloudinary.v2.uploader.upload(
      uploadStr,
      {
        overwrite: true,
        invalidate: true,
        width: 810, 
        height: 656,
        //crop: "crop",
      },
      function (error, result) {
        console.log("error", error);
        console.log("result", result);
      }
    );

    //ruta del servidor /app/src/public/
  }

  if (req.body.imgSignature != "") {
    const imgSignature = req.body.imgSignature;
    let uploadStr = 'data:image/jpeg;base64,' + imgSignature;
    imgSignat = await cloudinary.v2.uploader.upload(
      uploadStr,
      {
        overwrite: true,
        invalidate: true,
        width: 810,
        height: 456,
        //crop: "fill",
      },
      function (error, result) {
        console.log("error", error);
        console.log("result", result);
      }
    );
  }

  const {
    firstName,
    secondName,
    firstSurname,
    secondSurname,
    nitProducer,
    expedition,
    birthdate,
    ethnicity,
    celphone1,
    celphone2,
    email,
    gender,
    scholarLevel,
    organization,
    maritalStatus,
    fullnameSpouse,
    nitSpouse,
    expeditionSpouse,
    dateSpouse,
    celphoneSpouse,
    emailSpouse,
    nameFarm,
    municipality,
    corregimiento,
    vereda,
    possession,
    totalExtension,
    cropsArea,
    freeArea,
    conservationArea,
    currentProjects,
    agrochemical,
    bestPractices,
    otherAreas,
    afluentes,
    vocationAndLandUse,
    productiveLine,
    certificationType,
    purlieuNorth,
    purlieuSouth,
    purlieuEast,
    purlieuWest,
    altura,
    latitudeLongitude,
    anosPropiedad,
    productiveLine1,
    productiveLine2,
    productiveLine3,
    productiveLine4,
    productiveLine5,
    knowProductiveLine1,
    knowProductiveLine2,
    knowPeoductiveLine3,
    comercializationType,
    biopreparadosProduction,
    waterAvailable,
    accessRoads,
    electricityAvailability,
    ComunicationAvailable,
    projectParticipation,
    cropTools,
    firstAidKit,
    fumigateKit,
    irrigationSystem,
    machines,
    ParticipateInProyects,
    workingCapital,
    implementationTecnologyLevel,
    productLine1,
    variety1,
    cantPlants1,
    ageCrop1,
    stageCrop1,
    cantKgProducedByYear1,
    cropStatus1,
    aproxArea1,
    coordenates1,
    useType,
    promKgComercializateValue,
    productLine2,
    variety2,
    cantPlants2,
    ageCrop2,
    stageCrop2,
    cantKgProducedByYear2,
    cropStatus2,
    aproxArea2,
    coordenates2,
    useType2,
    promKgComercializateValu2,
    productLine3,
    variety3,
    cantPlants3,
    ageCrop3,
    stageCrop3,
    cantKgProducedByYear3,
    cropStatus3,
    aproxArea3,
    coordenates3,
    useType3,
    promKgComercializateValu3,
    projectId,
    productLine4Pecuaria,
    breed,
    cantAnimals,
    numberPlaces,
    ageAverageAnimals,
    ageCrop4, 
    cantKgProducedByYear4,
    cropStatus4,
    aproxArea4,
    coordenates4,
    nutritionType,
    promKgComercializateValu4,
    productLine5Pecuaria,
    breed5,
    cantAnimals5,
    numberPlaces5,
    ageAverageAnimals5,
    ageCrop5, 
    cantKgProducedByYear5,
    cropStatus5,
    aproxArea5,
    coordenates5,
    nutritionType5,
    promKgComercializateValu5,
    imgSignature,
    creationDate,
    userId,
    comments,
    plantsDistance1,
    groovesDistance1,
    plantsDistance2,
    groovesDistance2,
    plantsDistance3,
    groovesDistance3,
    knowProductiveLine4,
    knowProductiveLine5,
    cant_kg_by_year_lote4,
    cant_kg_by_year_lote5,
    price_kg_sold_lote4,
    price_kg_sold_lote5,
    typeofanimal,
    typeofanimal5
  } = req.body;

  const newFarm = {
    img_beneficiario: result.url,
    firstName,
    secondName,
    firstSurname,
    secondSurname,
    nitProducer,
    expedition,
    birthdate,
    ethnicity,
    celphone1,
    celphone2,
    email,
    gender,
    scholarLevel,
    organization,
    maritalStatus,
    fullnameSpouse,
    nitSpouse,
    expeditionSpouse,
    dateSpouse,
    celphoneSpouse,
    emailSpouse,
    nameFarm,
    municipality,
    corregimiento,
    vereda,
    possession,
    totalExtension,
    cropsArea,
    freeArea,
    conservationArea,
    currentProjects,
    agrochemical,
    bestPractices,
    otherAreas,
    afluentes,
    vocationAndLandUse,
    productiveLine,
    certificationType,
    purlieuNorth,
    purlieuSouth,
    purlieuEast,
    purlieuWest,
    altura,
    latitudeLongitude,
    anosPropiedad,
    productiveLine1,
    productiveLine2,
    productiveLine3,
    knowProductiveLine1,
    knowProductiveLine2,
    knowPeoductiveLine3,
    comercializationType,
    biopreparadosProduction,
    waterAvailable,
    accessRoads,
    electricityAvailability,
    ComunicationAvailable,
    projectParticipation,
    cropTools,
    firstAidKit,
    fumigateKit,
    irrigationSystem,
    machines,
    ParticipateInProyects,
    workingCapital,
    implementationTecnologyLevel,
    productLine1,
    variety1,
    cantPlants1,
    ageCrop1,
    stageCrop1,
    cantKgProducedByYear1,
    cropStatus1,
    aproxArea1,
    coordenates1,
    useType,
    promKgComercializateValue,
    productLine2,
    variety2,
    cantPlants2,
    ageCrop2,
    stageCrop2,
    cantKgProducedByYear2,
    cropStatus2,
    aproxArea2,
    coordenates2,
    useType2,
    promKgComercializateValu2,
    productLine3,
    variety3,
    cantPlants3,
    ageCrop3,
    stageCrop3,
    cantKgProducedByYear3,
    cropStatus3,
    aproxArea3,
    coordenates3,
    useType3,
    promKgComercializateValu3,
    projectId,
    productLine4Pecuaria,
    breed,
    cantAnimals,
    numberPlaces,
    ageAverageAnimals,
    ageCrop4,
    cantKgProducedByYear4,
    cropStatus4,
    aproxArea4,
    coordenates4,
    nutritionType,
    promKgComercializateValu4,
    productLine5Pecuaria,
    breed5,
    cantAnimals5,
    numberPlaces5,
    ageAverageAnimals5,
    ageCrop5,
    cantKgProducedByYear5,
    cropStatus5,
    aproxArea5,
    coordenates5,
    nutritionType5,
    promKgComercializateValu5,
    productiveLine4,
    productiveLine5,
    imgSignature: imgSignat.url,
    creationDate,
    userId,
    comments,
    plantsDistance1,
    groovesDistance1,
    plantsDistance2,
    groovesDistance2,
    plantsDistance3,
    groovesDistance3,
    knowProductiveLine4,
    knowProductiveLine5,
    cant_kg_by_year_lote4,
    cant_kg_by_year_lote5,
    price_kg_sold_lote4,
    price_kg_sold_lote5,
    typeofanimal,
    typeofanimal5
  };

  await pool.query("INSERT INTO farm set ?", [newFarm]);

  const dataSaved = await pool.query(
    "SELECT * from farm WHERE nitProducer = ? AND nameFarm = ?",
    [newFarm.nitProducer, newFarm.nameFarm]
  );

  res.json({
    mensaje: "Los datos se han almacenado con exito",
    id_farm: dataSaved[0].id_farm,
    img_beneficiario: imgBeneficiario,
    firstName: dataSaved[0].firstName,
    secondName: dataSaved[0].secondName,
    firstSurname: dataSaved[0].firstSurname,
    secondSurname: dataSaved[0].secondSurname,
    nitProducer: dataSaved[0].nitProducer,
    expedition: dataSaved[0].expedition,
    birthdate: dataSaved[0].birthdate,
    ethnicity: dataSaved[0].ethnicity,
    celphone1: dataSaved[0].celphone1,
    celphone2: dataSaved[0].celphone2,
    email: dataSaved[0].email,
    gender: dataSaved[0].gender,
    scholarLevel: dataSaved[0].scholarLevel,
    organization: dataSaved[0].organization,
    maritalStatus: dataSaved[0].maritalStatus,
    fullnameSpouse: dataSaved[0].fullnameSpouse,
    nitSpouse: dataSaved[0].nitProducer,
    expeditionSpouse: dataSaved[0].expeditionSpouse,
    dateSpouse: dataSaved[0].dateSpouse,
    celphoneSpouse: dataSaved[0].celphoneSpouse,
    emailSpouse: dataSaved[0].emailSpouse,
    nameFarm: dataSaved[0].nameFarm,
    municipality: dataSaved[0].municipality,
    corregimiento: dataSaved[0].corregimiento,
    vereda: dataSaved[0].vereda,
    possession: dataSaved[0].possession,
    totalExtension: dataSaved[0].totalExtension,
    cropsArea: dataSaved[0].cropsArea,
    freeArea: dataSaved[0].freeArea,
    conservationArea: dataSaved[0].conservationArea,
    currentProjects: dataSaved[0].currentProjects,
    agrochemical: dataSaved[0].agrochemical,
    bestPractices: dataSaved[0].bestPractices,
    otherAreas: dataSaved[0].otherAreas,
    afluentes: dataSaved[0].afluentes,
    vocationAndLandUse: dataSaved[0].vocationAndLandUse,
    productiveLine: dataSaved[0].productiveLine,
    certificationType: dataSaved[0].certificationType,
    purlieuNorth: dataSaved[0].purlieuNorth,
    purlieuSouth: dataSaved[0].purlieuSouth,
    purlieuEast: dataSaved[0].purlieuEast,
    purlieuWest: dataSaved[0].purlieuWest,
    altura: dataSaved[0].altura,
    latitudeLongitude: dataSaved[0].latitudeLongitude,
    anosPropiedad: dataSaved[0].anosPropiedad,
    productiveLine1: dataSaved[0].productiveLine1,
    productiveLine2: dataSaved[0].productiveLine2,
    productiveLine3: dataSaved[0].productiveLine3,
    knowProductiveLine1: dataSaved[0].knowProductiveLine1,
    knowProductiveLine2: dataSaved[0].knowProductiveLine2,
    knowPeoductiveLine3: dataSaved[0].knowPeoductiveLine3,
    comercializationType: dataSaved[0].comercializationType,
    biopreparadosProduction: dataSaved[0].biopreparadosProduction,
    waterAvailable: dataSaved[0].waterAvailable,
    accessRoads: dataSaved[0].accessRoads,
    electricityAvailability: dataSaved[0].electricityAvailability,
    ComunicationAvailable: dataSaved[0].ComunicationAvailable,
    projectParticipation: dataSaved[0].projectParticipation,
    cropTools: dataSaved[0].cropTools,
    firstAidKit: dataSaved[0].firstAidKit,
    fumigateKit: dataSaved[0].fumigateKit,
    irrigationSystem: dataSaved[0].irrigationSystem,
    machines: dataSaved[0].machines,
    ParticipateInProyects: dataSaved[0].ParticipateInProyects,
    workingCapital: dataSaved[0].workingCapital,
    implementationTecnologyLevel: dataSaved[0].implementationTecnologyLevel,
    productLine1: dataSaved[0].productLine1,
    variety1: dataSaved[0].variety1,
    cantPlants1: dataSaved[0].cantPlants1,
    plantsDistance1: dataSaved[0].plantsDistance1,
    groovesDistance1: dataSaved[0].groovesDistance1,
    ageCrop1: dataSaved[0].ageCrop1,
    stageCrop1: dataSaved[0].stageCrop1,
    cantKgProducedByYear1: dataSaved[0].cantKgProducedByYear1,
    cropStatus1: dataSaved[0].cropStatus1,
    aproxArea1: dataSaved[0].aproxArea1,
    coordenates1: dataSaved[0].coordenates1,
    useType: dataSaved[0].useType,
    promKgComercializateValue: dataSaved[0].promKgComercializateValue,
    productLine2: dataSaved[0].productLine2,
    variety2: dataSaved[0].variety2,
    cantPlants2: dataSaved[0].cantPlants2,
    plantsDistance2: dataSaved[0].plantsDistance2,
    groovesDistance2: dataSaved[0].groovesDistance2,
    ageCrop2: dataSaved[0].ageCrop2,
    stageCrop2: dataSaved[0].stageCrop2,
    cantKgProducedByYear2: dataSaved[0].cantKgProducedByYear2,
    cropStatus2: dataSaved[0].cropStatus2,
    aproxArea2: dataSaved[0].aproxArea2,
    coordenates2: dataSaved[0].coordenates2,
    useType2: dataSaved[0].useType2,
    promKgComercializateValu2: dataSaved[0].promKgComercializateValu2,
    productLine3: dataSaved[0].productLine3,
    variety3: dataSaved[0].variety3,
    cantPlants3: dataSaved[0].cantPlants3,
    plantsDistance3: dataSaved[0].plantsDistance3,
    groovesDistance3: dataSaved[0].groovesDistance3,
    ageCrop3: dataSaved[0].ageCrop3,
    stageCrop3: dataSaved[0].stageCrop3,
    cantKgProducedByYear3: dataSaved[0].cantKgProducedByYear3,
    cropStatus3: dataSaved[0].cropStatus3,
    aproxArea3: dataSaved[0].aproxArea3,
    coordenates3: dataSaved[0].coordenates3,
    useType3: dataSaved[0].useType3,
    promKgComercializateValu3: dataSaved[0].promKgComercializateValu3,
    projectId: dataSaved[0].projectId,
    productLine4Pecuaria: dataSaved[0].productLine4Pecuaria,
    breed: dataSaved[0].breed,
    cantAnimals: dataSaved[0].cantAnimals,
    numberPlaces: dataSaved[0].numberPlaces,
    ageAverageAnimals: dataSaved[0].ageAverageAnimals,
    ageCrop4: dataSaved[0].ageCrop4,
    cantKgProducedByYear4: dataSaved[0].cantKgProducedByYear4,
    cropStatus4: dataSaved[0].cropStatus4,
    aproxArea4: dataSaved[0].aproxArea4,
    coordenates4: dataSaved[0].coordenates4,
    nutritionType: dataSaved[0].nutritionType,
    promKgComercializateValu4: dataSaved[0].promKgComercializateValu4,
    productLine5Pecuaria: dataSaved[0].productLine5Pecuaria,
    breed5: dataSaved[0].breed5,
    cantAnimals5: dataSaved[0].cantAnimals5,
    numberPlaces5: dataSaved[0].numberPlaces5,
    ageAverageAnimals5: dataSaved[0].ageAverageAnimals5,
    ageCrop5: dataSaved[0].ageCrop5,
    cantKgProducedByYear5: dataSaved[0].cantKgProducedByYear5,
    cropStatus5: dataSaved[0].cropStatus5,
    aproxArea5: dataSaved[0].aproxArea5,
    coordenates5: dataSaved[0].coordenates5,
    nutritionType5: nutritionType5,
    promKgComercializateValu5: dataSaved[0].promKgComercializateValu5,
    imgSignature: imgSig,
    creationDate: dataSaved[0].creationDate,
    userId: dataSaved[0].userId,
    comments: dataSaved[0].comments,
    knowProductiveLine4: dataSaved[0].knowProductiveLine4,
    knowProductiveLine5: dataSaved[0].knowProductiveLine5,
    cant_kg_by_year_lote4: dataSaved[0].cant_kg_by_year_lote4,
    cant_kg_by_year_lote5: dataSaved[0].cant_kg_by_year_lote5,
    price_kg_sold_lote4: dataSaved[0].price_kg_sold_lote4,
    price_kg_sold_lote5: dataSaved[0].price_kg_sold_lote5,
    typeofanimal:dataSaved[0].typeofanimal,
    typeofanimal5:dataSaved[0].typeofanimal5
  });
});

//Listar todas las fincas
router.get("/characterizationList", async (req, res) => {
  let resultado = await pool.query("SELECT * FROM farm");

  console.log('resultado',resultado)
  
  fn.asyncForEach(resultado, async (result, idx) => {
    resultado[idx].img_beneficiario = result.img_beneficiario.toString().trim();
  });





  res.json(resultado);
});

router.post("/characterizationListByUser", async (req, res) => {

  const { userId, projectId } = req.body;

  let resultado = await pool.query("SELECT * FROM farm WHERE projectId = ? AND userId = ?", [projectId, userId] );
  
  fn.asyncForEach(resultado, async (result, idx) => {
    resultado[idx].img_beneficiario = result.img_beneficiario.toString().trim();
  });


  console.log(`Resultado ${resultado}`)
  res.json({resultado});
});

//Mostrar una finca por ID
router.get("/farmDetails/:id", async (req, res) => {
  let imgData = {};

  const dataFarm = await pool.query("SELECT * FROM farm WHERE id_farm = ?", [
    req.params.id,
  ]);

  imgData = await image2base64(dataFarm[0].img_beneficiario);

  console.log("datafarm", dataFarm[0]);

  dataFarm[0].img_beneficiario = imgData;

  res.json({ Data: dataFarm[0] });
});

//Update a farm
router.put("/updateFarm/:id", async (req, res, next) => {
  const updImage = req.file.path;
  const updString = updImage.slice(15);
  const {
    firstName,
    secondName,
    firstSurname,
    secondSurname,
    nitProducer,
    expedition,
    birthdate,
    ethnicity,
    celphone1,
    celphone2,
    email,
    gender,
    scholarLevel,
    organization,
    maritalStatus,
    fullnameSpouse,
    nitSpouse,
    expeditionSpouse,
    dateSpouse,
    celphoneSpouse,
    emailSpouse,
    nameFarm,
    municipality,
    corregimiento,
    vereda,
    possession,
    totalExtension,
    cropsArea,
    freeArea,
    conservationArea,
    currentProjects,
    agrochemical,
    agroquimicos,
    otherAreas,
    afluentes,
    vocationAndLandUse,
    productiveLine,
    certificationType,
    purlieuNorth,
    purlieuSouth,
    purlieuEast,
    purlieuWest,
    altura,
    latitudeLongitude,
    anosPropiedad,
    productiveLine1,
    productiveLine2,
    productiveLine3,
    knowProductiveLine1,
    knowProductiveLine2,
    knowPeoductiveLine3,
    comercializationType,
    biopreparadosProduction,
    waterAvailable,
    accessRoads,
    electricityAvailability,
    ComunicationAvailable,
    projectParticipation,
    cropTools,
    firstAidKit,
    fumigateKit,
    irrigationSystem,
    machines,
    ParticipateInProyects,
    projectInterest,
    implementationTecnologyLevel,
    productLine1,
    variety1,
    cantPlants1,
    sowingDistance1,
    ageCrop1,
    stageCrop1,
    cantKgProducedByYear1,
    cropStatus1,
    aproxArea1,
    coordenates1,
    useType,
    promKgComercializateValue,
    productLine2,
    variety2,
    cantPlants2,
    sowingDistance2,
    ageCrop2,
    stageCrop2,
    cantKgProducedByYear2,
    cropStatus2,
    aproxArea2,
    coordenates2,
    useType2,
    promKgComercializateValu2,
    productLine3,
    variety3,
    cantPlants3,
    sowingDistance3,
    ageCrop3,
    stageCrop3,
    cantKgProducedByYear3,
    cropStatus3,
    aproxArea3,
    coordenates3,
    useType3,
    promKgComercializateValu3,
    knowProductiveLine4,
    knowProductiveLine5,
  } = req.body;

  const updFarm = {
    img_beneficiario: updString,
    firstName,
    secondName,
    firstSurname,
    secondSurname,
    nitProducer,
    expedition,
    birthdate,
    ethnicity,
    celphone1,
    celphone2,
    email,
    gender,
    scholarLevel,
    organization,
    maritalStatus,
    fullnameSpouse,
    nitSpouse,
    expeditionSpouse,
    dateSpouse,
    celphoneSpouse,
    emailSpouse,
    nameFarm,
    municipality,
    corregimiento,
    vereda,
    possession,
    totalExtension,
    cropsArea,
    freeArea,
    conservationArea,
    currentProjects,
    agrochemical,
    agroquimicos,
    otherAreas,
    afluentes,
    vocationAndLandUse,
    productiveLine,
    certificationType,
    purlieuNorth,
    purlieuSouth,
    purlieuEast,
    purlieuWest,
    altura,
    latitudeLongitude,
    anosPropiedad,
    productiveLine1,
    productiveLine2,
    productiveLine3,
    knowProductiveLine1,
    knowProductiveLine2,
    knowPeoductiveLine3,
    comercializationType,
    biopreparadosProduction,
    waterAvailable,
    accessRoads,
    electricityAvailability,
    ComunicationAvailable,
    projectParticipation,
    cropTools,
    firstAidKit,
    fumigateKit,
    irrigationSystem,
    machines,
    ParticipateInProyects,
    projectInterest,
    implementationTecnologyLevel,
    productLine1,
    variety1,
    cantPlants1,
    sowingDistance1,
    ageCrop1,
    stageCrop1,
    cantKgProducedByYear1,
    cropStatus1,
    aproxArea1,
    coordenates1,
    useType,
    promKgComercializateValue,
    productLine2,
    variety2,
    cantPlants2,
    sowingDistance2,
    ageCrop2,
    stageCrop2,
    cantKgProducedByYear2,
    cropStatus2,
    aproxArea2,
    coordenates2,
    useType2,
    promKgComercializateValu2,
    productLine3,
    variety3,
    cantPlants3,
    sowingDistance3,
    ageCrop3,
    stageCrop3,
    cantKgProducedByYear3,
    cropStatus3,
    aproxArea3,
    coordenates3,
    useType3,
    promKgComercializateValu3,
    knowProductiveLine4,
    knowProductiveLine5,
  };

  try {
    await pool.query("UPDATE farm set ? WHERE id_farm = ?", [
      updFarm,
      req.params.id,
    ]);
    res.json({ mensaje: "Datos actualizados con exito" });
  } catch (error) {
    console.log(error);
    next();
  }
});

module.exports = router;
